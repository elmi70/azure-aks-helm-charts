# Default values for kube-state-metrics.
prometheusScrape: true

image:
  registry: registry.k8s.io
  repository: kube-state-metrics/kube-state-metrics
  tag: ""  # If unset use v + .Chart.AppVersion
  pullPolicy: IfNotPresent

imagePullSecrets: []

# Basic deployment settings
replicas: 1
revisionHistoryLimit: 10

# Chart naming
nameOverride: ""
fullnameOverride: "kube-state-metrics"

# Deployment namespace override
namespaceOverride: ""


# ServiceAccount configuration
serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: true
  annotations: {}

# RBAC settings
rbac:
  create: true

# Service configuration
service:
  type: ClusterIP
  port: 8080
  annotations: {}

# Security contexts
securityContext:
  enabled: true
  runAsGroup: 65534
  runAsUser: 65534
  fsGroup: 65534
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL

# Health checks
startupProbe:
  enabled: false
  failureThreshold: 3
  httpGet:
    httpHeaders: []
    scheme: http
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5

livenessProbe:
  failureThreshold: 3
  httpGet:
    httpHeaders: []
    scheme: http
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5

readinessProbe:
  failureThreshold: 3
  httpGet:
    httpHeaders: []
    scheme: http
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5

# Resource limits
resources:
  requests:
    memory: "250Mi"
    cpu: "100m"
  limits:
    memory: "500Mi"
    cpu: "200m"

# Pod scheduling
nodeSelector: {}
tolerations: []
affinity: {}

# Pod configuration
annotations: {}
labels: {}
podAnnotations: {}
podLabels: {}
hostNetwork: false

# Collectors to enable
collectors:
  - certificatesigningrequests
  - configmaps
  - cronjobs
  - daemonsets
  - deployments
  - endpoints
  - horizontalpodautoscalers
  - ingresses
  - jobs
  - leases
  - limitranges
  - mutatingwebhookconfigurations
  - namespaces
  - networkpolicies
  - nodes
  - persistentvolumeclaims
  - persistentvolumes
  - poddisruptionbudgets
  - pods
  - replicasets
  - replicationcontrollers
  - resourcequotas
  - secrets
  - services
  - statefulsets
  - storageclasses
  - validatingwebhookconfigurations
  - volumeattachments

# Additional CLI arguments
extraArgs: []

# Additional environment variables
env: []
