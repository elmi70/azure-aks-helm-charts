---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafana.fullname" . }}
  labels:
    {{- include "grafana.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "grafana.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "grafana.selectorLabels" . | nindent 8 }}
        {{- if .Values.keyVault.enabled }}
        azure.workload.identity/use: "true"
        {{- end }}
    spec:
      {{- with .Values.grafana.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "grafana.serviceAccountName" . }}
      containers:
        - name: grafana
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.grafana.service.targetPort }}
              protocol: TCP
          env:
            {{- if .Values.keyVault.enabled }}
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.grafana.adminUser | quote }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "grafana.fullname" . }}-admin-secret
                  key: admin-password
            {{- else }}
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.grafana.adminUser | quote }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword | quote }}
            {{- end }}
            - name: GF_PATHS_DATA
              value: /var/lib/grafana
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
            - name: GF_SERVER_DOMAIN
              value: "elmiabdullahi.com"
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.elmiabdullahi.com"
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 30
          resources:
            {{- toYaml .Values.grafana.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: /var/lib/grafana
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
            - name: dashboard-provisioner
              mountPath: "/etc/grafana/provisioning/dashboards/dashboard-provider.yaml"
              subPath: dashboard-provider.yaml
            - name: dashboards-kubernetes
              mountPath: /var/lib/grafana/dashboards/kubernetes
              readOnly: true
            - name: dashboards-prometheus
              mountPath: /var/lib/grafana/dashboards/prometheus
              readOnly: true
            {{- if .Values.keyVault.enabled }}
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
            {{- end }}
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "grafana.fullname" . }}
        - name: datasources
          configMap:
            name: {{ include "grafana.fullname" . }}-datasources
        - name: dashboard-provisioner
          configMap:
            name: {{ .Chart.Name }}-dashboard-provisioner
        - name: dashboards-kubernetes
          configMap:
            name: {{ .Release.Name }}-kubernetes
        - name: dashboards-prometheus
          configMap:
            name: {{ .Release.Name }}-prometheus
        {{- if .Values.keyVault.enabled }}
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "grafana.fullname" . }}-kv-secrets
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}